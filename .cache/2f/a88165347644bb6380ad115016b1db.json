{"id":"index.js","dependencies":[{"name":"C:\\Users\\Araketsu\\Desktop\\RxJs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"rxjs","loc":{"line":12,"column":19,"index":277},"parent":"C:\\Users\\Araketsu\\Desktop\\RxJs\\src\\index.js","resolved":"C:\\Users\\Araketsu\\Desktop\\RxJs\\node_modules\\rxjs\\dist\\esm5\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n// PLuck Operator //\n// ___________________________________________________\n// Example on Marble Diagram: \n// Input---({v:1})--({v:2})--({v:3})-->\n// Output--(1)--(2)--(3)-->\n// ______________________________________________________________ \n\nvar observable = (0, _rxjs.of)(1, 2, 3, 4, 5);\nvar subscription = observable.subscribe({\n  next: function next(value) {\n    console.log(value);\n  },\n  complete: function complete() {\n    console.log('completed');\n  }\n});\nconsole.log('hello');\n\n// Pipeable Operators //\n// They are functions for transforming, filtering, and combining data. \n// --------------------------------------------------------\n// New Solutuin:                                           \\\n// observable.pipe (                                       \\\n//   firstOperator(config),                                 \\\n//   secondOperator(confug)                                  \\\n// ).subscribe()                                                          \\\n// -------------------------------------------------------------\n// Old Solution:                                                 \\       \n// const observble = new Observable()                            \\\n// const operatorFunc = firstOperator(config)                     \\   \n// const newObservble = operatorFunc(observable)                   \\             \n// const operatorFuncTwo = secondOperator(config)                   \\             \n// const newObservbleTwo = operatorFuncTwo(newObservable)            \\     \n//----------------------------------------------------------------------------------------------------------//\n\n// import { of, map } from \"rxjs\";\n\n// const observable = of(1,2,3,4,5).pipe(\n//   map((value) => `$${value}`)\n// )\n\n// // const observable = of(1,2,3,4,5)\n// // const numbersWithSymbols = observable.pipe(\n// //   map((value) => `$${value}`)\n// // )\n\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value)\n//   },\n//   complete() {\n//     console.log('completed')\n//   }\n// })\n// console.log('hello')\n//----------------------------------------------------------------------------------------------------------//\n\n// From will loop throw the array and give us -> // 1 // 2 // 3 // 4 // 5 // completed // hello //\n// It even can loop throw string. const observable = from('alex')   ->    // a // l // e // x // completed // hello //\n// In case of 'from(fetch('https://jsonplaceholder.typicode.com/todos/1'))' we will get response back. // hello // {promise object} // complete //\n//----------------------------------------------------------------------------------------------------------//\n\n// import { from } from \"rxjs\";\n// const observable = from(fetch('https://jsonplaceholder.typicode.com/todos/1'))\n// // const observable = from('alex')\n// // const observable = from([1,2,3,4,5])\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value)\n//   },\n//   complete() {\n//     console.log('completed')\n//   }\n// })\n// console.log('hello')\n\n// Of will give us -> // 1 // 2 // 3 // 4 // 5 // completed // hello //\n// If we put inside of OF an array it will not loop throw array and just give us -> // [1,2,3,4,5] // completed // hello //\n//----------------------------------------------------------------------------------------------------------//\n\n// import { of } from \"rxjs\";\n// const observable = of(1,2,3,4,5)\n// const subscription = observable.subscribe({\n//   next(value) {\n//     console.log(value)\n//   },\n//   complete() {\n//     console.log('completed')\n//   }\n// })\n// console.log('hello')\n\n// FromEvent have 2 parametrs. Here we are listening for document and 'click' event. As well we need to insubscribe to avoid memory leak.\n//----------------------------------------------------------------------------------------------------------//\n\n// import { fromEvent } from \"rxjs\";\n// const observable = fromEvent(\n//   document, 'click'\n// )\n// const subscription = observable.subscribe(\n//   console.log\n// )\n\n// Timer will run from 0 to 1000 \n//----------------------------------------------------------------------------------------------------------//\n\n// import { timer } from \"rxjs\";\n// const observable = timer(0, 1000)\n// const subscription = observable.subscribe(\n//   console.log\n// )\n\n// Interval will run for ever with interval of 1000\n//----------------------------------------------------------------------------------------------------------//\n\n// import { interval } from \"rxjs\";\n// const observable = interval(1000)\n// const subscription = observable.subscribe(\n//   console.log\n// )\n\n//----------------------------------------------------------------------------------------------------------//\n\n// import { Observable } from \"rxjs\";\n// const observable = new Observable((subscriber) => {\n//   const id = setInterval(() => {\n//     subscriber.next('test')\n//     console.log('leak')\n//   }, 1000)\n//   // subscriber.complete()            // Without this observble will run for ever \n//   return () => {\n//     clearInterval(id)\n//   }\n//   // subscriber.next('Hello world')                   // Runs II //\n//   // subscriber.error('Error!')            // After Error rest of the code do not run \n//   // subscriber.next('test')\n//   // subscriber.complete()                 // After Complete rest of the code do not run       \n//   // subscriber.next('next')\n// })\n\n// // console.log('before')                              // Runs I //\n\n// const subscription = observable.subscribe({\n//   next: (value) => {\n//     console.log(`Received ${value}`)\n//   },\n//   complete: () => {\n//     console.log(\"Completed\")\n//   },\n//   error: (err) => {\n//     console.log(err)\n//   }\n// })\n\n// setTimeout(() => {\n//   subscription.unsubscribe()\n// }, 4000)\n\n// // console.log('after')                               // Runs III //"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":3,"column":4},"source":"index.js","original":{"line":12,"column":0},"name":"_rxjs"},{"generated":{"line":3,"column":9},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":3,"column":12},"source":"index.js","original":{"line":12,"column":0},"name":"require"},{"generated":{"line":3,"column":19},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":14,"column":0}},{"generated":{"line":11,"column":4},"source":"index.js","original":{"line":14,"column":6},"name":"observable"},{"generated":{"line":11,"column":14},"source":"index.js","original":{"line":14,"column":16}},{"generated":{"line":11,"column":17},"source":"index.js","original":{"line":14,"column":19}},{"generated":{"line":11,"column":21},"source":"index.js","original":{"line":14,"column":19},"name":"of"},{"generated":{"line":11,"column":29},"source":"index.js","original":{"line":14,"column":21}},{"generated":{"line":11,"column":31},"source":"index.js","original":{"line":14,"column":22}},{"generated":{"line":11,"column":32},"source":"index.js","original":{"line":14,"column":23}},{"generated":{"line":11,"column":34},"source":"index.js","original":{"line":14,"column":24}},{"generated":{"line":11,"column":35},"source":"index.js","original":{"line":14,"column":25}},{"generated":{"line":11,"column":37},"source":"index.js","original":{"line":14,"column":26}},{"generated":{"line":11,"column":38},"source":"index.js","original":{"line":14,"column":27}},{"generated":{"line":11,"column":40},"source":"index.js","original":{"line":14,"column":28}},{"generated":{"line":11,"column":41},"source":"index.js","original":{"line":14,"column":29}},{"generated":{"line":11,"column":43},"source":"index.js","original":{"line":14,"column":30}},{"generated":{"line":11,"column":44},"source":"index.js","original":{"line":14,"column":31}},{"generated":{"line":11,"column":45},"source":"index.js","original":{"line":14,"column":32}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":12,"column":4},"source":"index.js","original":{"line":16,"column":6},"name":"subscription"},{"generated":{"line":12,"column":16},"source":"index.js","original":{"line":16,"column":18}},{"generated":{"line":12,"column":19},"source":"index.js","original":{"line":16,"column":21},"name":"observable"},{"generated":{"line":12,"column":29},"source":"index.js","original":{"line":16,"column":31}},{"generated":{"line":12,"column":30},"source":"index.js","original":{"line":16,"column":32},"name":"subscribe"},{"generated":{"line":12,"column":39},"source":"index.js","original":{"line":16,"column":41}},{"generated":{"line":12,"column":40},"source":"index.js","original":{"line":16,"column":42}},{"generated":{"line":13,"column":2},"source":"index.js","original":{"line":17,"column":2},"name":"next"},{"generated":{"line":13,"column":6},"source":"index.js","original":{"line":17,"column":6}},{"generated":{"line":13,"column":17},"source":"index.js","original":{"line":17,"column":6},"name":"next"},{"generated":{"line":13,"column":22},"source":"index.js","original":{"line":17,"column":7},"name":"value"},{"generated":{"line":13,"column":27},"source":"index.js","original":{"line":17,"column":12}},{"generated":{"line":13,"column":29},"source":"index.js","original":{"line":17,"column":14}},{"generated":{"line":14,"column":4},"source":"index.js","original":{"line":18,"column":4},"name":"console"},{"generated":{"line":14,"column":11},"source":"index.js","original":{"line":18,"column":11}},{"generated":{"line":14,"column":12},"source":"index.js","original":{"line":18,"column":12},"name":"log"},{"generated":{"line":14,"column":15},"source":"index.js","original":{"line":18,"column":15}},{"generated":{"line":14,"column":16},"source":"index.js","original":{"line":18,"column":16},"name":"value"},{"generated":{"line":14,"column":21},"source":"index.js","original":{"line":18,"column":21}},{"generated":{"line":14,"column":22},"source":"index.js","original":{"line":18,"column":22}},{"generated":{"line":15,"column":2},"source":"index.js","original":{"line":19,"column":2}},{"generated":{"line":15,"column":3},"source":"index.js","original":{"line":19,"column":3}},{"generated":{"line":16,"column":2},"source":"index.js","original":{"line":20,"column":2},"name":"complete"},{"generated":{"line":16,"column":10},"source":"index.js","original":{"line":20,"column":10}},{"generated":{"line":16,"column":21},"source":"index.js","original":{"line":20,"column":10},"name":"complete"},{"generated":{"line":16,"column":30},"source":"index.js","original":{"line":20,"column":10}},{"generated":{"line":16,"column":32},"source":"index.js","original":{"line":20,"column":13}},{"generated":{"line":17,"column":4},"source":"index.js","original":{"line":21,"column":4},"name":"console"},{"generated":{"line":17,"column":11},"source":"index.js","original":{"line":21,"column":11}},{"generated":{"line":17,"column":12},"source":"index.js","original":{"line":21,"column":12},"name":"log"},{"generated":{"line":17,"column":15},"source":"index.js","original":{"line":21,"column":15}},{"generated":{"line":17,"column":16},"source":"index.js","original":{"line":21,"column":16}},{"generated":{"line":17,"column":27},"source":"index.js","original":{"line":21,"column":27}},{"generated":{"line":17,"column":28},"source":"index.js","original":{"line":21,"column":28}},{"generated":{"line":18,"column":2},"source":"index.js","original":{"line":22,"column":2}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":23,"column":0}},{"generated":{"line":19,"column":1},"source":"index.js","original":{"line":23,"column":1}},{"generated":{"line":19,"column":2},"source":"index.js","original":{"line":23,"column":2}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":24,"column":0},"name":"console"},{"generated":{"line":20,"column":7},"source":"index.js","original":{"line":24,"column":7}},{"generated":{"line":20,"column":8},"source":"index.js","original":{"line":24,"column":8},"name":"log"},{"generated":{"line":20,"column":11},"source":"index.js","original":{"line":24,"column":11}},{"generated":{"line":20,"column":12},"source":"index.js","original":{"line":24,"column":12}},{"generated":{"line":20,"column":19},"source":"index.js","original":{"line":24,"column":19}},{"generated":{"line":20,"column":20},"source":"index.js","original":{"line":24,"column":20}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":30,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":31,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":32,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":33,"column":0}},{"generated":{"line":26,"column":0},"source":"index.js","original":{"line":34,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":35,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":36,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":37,"column":0}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":39,"column":0}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":40,"column":0}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":41,"column":0}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":42,"column":0}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":44,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":45,"column":0}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":49,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":50,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":51,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":53,"column":0}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":54,"column":0}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":55,"column":0}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":58,"column":0}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":59,"column":0}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":60,"column":0}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":61,"column":0}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":62,"column":0}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":63,"column":0}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":64,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":65,"column":0}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":66,"column":0}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":67,"column":0}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":71,"column":0}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":72,"column":0}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":73,"column":0}},{"generated":{"line":64,"column":0},"source":"index.js","original":{"line":74,"column":0}},{"generated":{"line":66,"column":0},"source":"index.js","original":{"line":76,"column":0}},{"generated":{"line":67,"column":0},"source":"index.js","original":{"line":77,"column":0}},{"generated":{"line":68,"column":0},"source":"index.js","original":{"line":78,"column":0}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":79,"column":0}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":80,"column":0}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":81,"column":0}},{"generated":{"line":72,"column":0},"source":"index.js","original":{"line":82,"column":0}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":83,"column":0}},{"generated":{"line":74,"column":0},"source":"index.js","original":{"line":84,"column":0}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":85,"column":0}},{"generated":{"line":76,"column":0},"source":"index.js","original":{"line":86,"column":0}},{"generated":{"line":77,"column":0},"source":"index.js","original":{"line":87,"column":0}},{"generated":{"line":78,"column":0},"source":"index.js","original":{"line":88,"column":0}},{"generated":{"line":80,"column":0},"source":"index.js","original":{"line":92,"column":0}},{"generated":{"line":81,"column":0},"source":"index.js","original":{"line":93,"column":0}},{"generated":{"line":82,"column":0},"source":"index.js","original":{"line":94,"column":0}},{"generated":{"line":84,"column":0},"source":"index.js","original":{"line":96,"column":0}},{"generated":{"line":85,"column":0},"source":"index.js","original":{"line":97,"column":0}},{"generated":{"line":86,"column":0},"source":"index.js","original":{"line":98,"column":0}},{"generated":{"line":87,"column":0},"source":"index.js","original":{"line":99,"column":0}},{"generated":{"line":88,"column":0},"source":"index.js","original":{"line":100,"column":0}},{"generated":{"line":89,"column":0},"source":"index.js","original":{"line":101,"column":0}},{"generated":{"line":90,"column":0},"source":"index.js","original":{"line":102,"column":0}},{"generated":{"line":91,"column":0},"source":"index.js","original":{"line":103,"column":0}},{"generated":{"line":92,"column":0},"source":"index.js","original":{"line":104,"column":0}},{"generated":{"line":93,"column":0},"source":"index.js","original":{"line":105,"column":0}},{"generated":{"line":94,"column":0},"source":"index.js","original":{"line":106,"column":0}},{"generated":{"line":96,"column":0},"source":"index.js","original":{"line":109,"column":0}},{"generated":{"line":97,"column":0},"source":"index.js","original":{"line":110,"column":0}},{"generated":{"line":99,"column":0},"source":"index.js","original":{"line":112,"column":0}},{"generated":{"line":100,"column":0},"source":"index.js","original":{"line":113,"column":0}},{"generated":{"line":101,"column":0},"source":"index.js","original":{"line":114,"column":0}},{"generated":{"line":102,"column":0},"source":"index.js","original":{"line":115,"column":0}},{"generated":{"line":103,"column":0},"source":"index.js","original":{"line":116,"column":0}},{"generated":{"line":104,"column":0},"source":"index.js","original":{"line":117,"column":0}},{"generated":{"line":105,"column":0},"source":"index.js","original":{"line":118,"column":0}},{"generated":{"line":107,"column":0},"source":"index.js","original":{"line":121,"column":0}},{"generated":{"line":108,"column":0},"source":"index.js","original":{"line":122,"column":0}},{"generated":{"line":110,"column":0},"source":"index.js","original":{"line":124,"column":0}},{"generated":{"line":111,"column":0},"source":"index.js","original":{"line":125,"column":0}},{"generated":{"line":112,"column":0},"source":"index.js","original":{"line":126,"column":0}},{"generated":{"line":113,"column":0},"source":"index.js","original":{"line":127,"column":0}},{"generated":{"line":114,"column":0},"source":"index.js","original":{"line":128,"column":0}},{"generated":{"line":116,"column":0},"source":"index.js","original":{"line":131,"column":0}},{"generated":{"line":117,"column":0},"source":"index.js","original":{"line":132,"column":0}},{"generated":{"line":119,"column":0},"source":"index.js","original":{"line":134,"column":0}},{"generated":{"line":120,"column":0},"source":"index.js","original":{"line":135,"column":0}},{"generated":{"line":121,"column":0},"source":"index.js","original":{"line":136,"column":0}},{"generated":{"line":122,"column":0},"source":"index.js","original":{"line":137,"column":0}},{"generated":{"line":123,"column":0},"source":"index.js","original":{"line":138,"column":0}},{"generated":{"line":125,"column":0},"source":"index.js","original":{"line":141,"column":0}},{"generated":{"line":127,"column":0},"source":"index.js","original":{"line":143,"column":0}},{"generated":{"line":128,"column":0},"source":"index.js","original":{"line":144,"column":0}},{"generated":{"line":129,"column":0},"source":"index.js","original":{"line":145,"column":0}},{"generated":{"line":130,"column":0},"source":"index.js","original":{"line":146,"column":0}},{"generated":{"line":131,"column":0},"source":"index.js","original":{"line":147,"column":0}},{"generated":{"line":132,"column":0},"source":"index.js","original":{"line":148,"column":0}},{"generated":{"line":133,"column":0},"source":"index.js","original":{"line":149,"column":0}},{"generated":{"line":134,"column":0},"source":"index.js","original":{"line":150,"column":0}},{"generated":{"line":135,"column":0},"source":"index.js","original":{"line":151,"column":0}},{"generated":{"line":136,"column":0},"source":"index.js","original":{"line":152,"column":0}},{"generated":{"line":137,"column":0},"source":"index.js","original":{"line":153,"column":0}},{"generated":{"line":138,"column":0},"source":"index.js","original":{"line":154,"column":0}},{"generated":{"line":139,"column":0},"source":"index.js","original":{"line":155,"column":0}},{"generated":{"line":140,"column":0},"source":"index.js","original":{"line":156,"column":0}},{"generated":{"line":141,"column":0},"source":"index.js","original":{"line":157,"column":0}},{"generated":{"line":142,"column":0},"source":"index.js","original":{"line":158,"column":0}},{"generated":{"line":144,"column":0},"source":"index.js","original":{"line":160,"column":0}},{"generated":{"line":146,"column":0},"source":"index.js","original":{"line":162,"column":0}},{"generated":{"line":147,"column":0},"source":"index.js","original":{"line":163,"column":0}},{"generated":{"line":148,"column":0},"source":"index.js","original":{"line":164,"column":0}},{"generated":{"line":149,"column":0},"source":"index.js","original":{"line":165,"column":0}},{"generated":{"line":150,"column":0},"source":"index.js","original":{"line":166,"column":0}},{"generated":{"line":151,"column":0},"source":"index.js","original":{"line":167,"column":0}},{"generated":{"line":152,"column":0},"source":"index.js","original":{"line":168,"column":0}},{"generated":{"line":153,"column":0},"source":"index.js","original":{"line":169,"column":0}},{"generated":{"line":154,"column":0},"source":"index.js","original":{"line":170,"column":0}},{"generated":{"line":155,"column":0},"source":"index.js","original":{"line":171,"column":0}},{"generated":{"line":156,"column":0},"source":"index.js","original":{"line":172,"column":0}},{"generated":{"line":158,"column":0},"source":"index.js","original":{"line":174,"column":0}},{"generated":{"line":159,"column":0},"source":"index.js","original":{"line":175,"column":0}},{"generated":{"line":160,"column":0},"source":"index.js","original":{"line":176,"column":0}},{"generated":{"line":162,"column":0},"source":"index.js","original":{"line":178,"column":0}}],"sources":{"index.js":"\r\n\r\n\r\n\r\n// PLuck Operator //\r\n// ___________________________________________________\r\n// Example on Marble Diagram: \r\n// Input---({v:1})--({v:2})--({v:3})-->\r\n// Output--(1)--(2)--(3)-->\r\n// ______________________________________________________________ \r\n\r\nimport { of } from \"rxjs\";\r\n\r\nconst observable = of(1,2,3,4,5)\r\n\r\nconst subscription = observable.subscribe({\r\n  next(value) {\r\n    console.log(value)\r\n  },\r\n  complete() {\r\n    console.log('completed')\r\n  }\r\n})\r\nconsole.log('hello')\r\n\r\n\r\n\r\n\r\n\r\n// Pipeable Operators //\r\n// They are functions for transforming, filtering, and combining data. \r\n// --------------------------------------------------------\r\n// New Solutuin:                                           \\\r\n// observable.pipe (                                       \\\r\n//   firstOperator(config),                                 \\\r\n//   secondOperator(confug)                                  \\\r\n// ).subscribe()                                                          \\\r\n// -------------------------------------------------------------\r\n// Old Solution:                                                 \\       \r\n// const observble = new Observable()                            \\\r\n// const operatorFunc = firstOperator(config)                     \\   \r\n// const newObservble = operatorFunc(observable)                   \\             \r\n// const operatorFuncTwo = secondOperator(config)                   \\             \r\n// const newObservbleTwo = operatorFuncTwo(newObservable)            \\     \r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { of, map } from \"rxjs\";\r\n\r\n// const observable = of(1,2,3,4,5).pipe(\r\n//   map((value) => `$${value}`)\r\n// )\r\n\r\n// // const observable = of(1,2,3,4,5)\r\n// // const numbersWithSymbols = observable.pipe(\r\n// //   map((value) => `$${value}`)\r\n// // )\r\n\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value)\r\n//   },\r\n//   complete() {\r\n//     console.log('completed')\r\n//   }\r\n// })\r\n// console.log('hello')\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n\r\n// From will loop throw the array and give us -> // 1 // 2 // 3 // 4 // 5 // completed // hello //\r\n// It even can loop throw string. const observable = from('alex')   ->    // a // l // e // x // completed // hello //\r\n// In case of 'from(fetch('https://jsonplaceholder.typicode.com/todos/1'))' we will get response back. // hello // {promise object} // complete //\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { from } from \"rxjs\";\r\n// const observable = from(fetch('https://jsonplaceholder.typicode.com/todos/1'))\r\n// // const observable = from('alex')\r\n// // const observable = from([1,2,3,4,5])\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value)\r\n//   },\r\n//   complete() {\r\n//     console.log('completed')\r\n//   }\r\n// })\r\n// console.log('hello')\r\n\r\n\r\n\r\n// Of will give us -> // 1 // 2 // 3 // 4 // 5 // completed // hello //\r\n// If we put inside of OF an array it will not loop throw array and just give us -> // [1,2,3,4,5] // completed // hello //\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { of } from \"rxjs\";\r\n// const observable = of(1,2,3,4,5)\r\n// const subscription = observable.subscribe({\r\n//   next(value) {\r\n//     console.log(value)\r\n//   },\r\n//   complete() {\r\n//     console.log('completed')\r\n//   }\r\n// })\r\n// console.log('hello')\r\n\r\n\r\n// FromEvent have 2 parametrs. Here we are listening for document and 'click' event. As well we need to insubscribe to avoid memory leak.\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { fromEvent } from \"rxjs\";\r\n// const observable = fromEvent(\r\n//   document, 'click'\r\n// )\r\n// const subscription = observable.subscribe(\r\n//   console.log\r\n// )\r\n\r\n\r\n// Timer will run from 0 to 1000 \r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { timer } from \"rxjs\";\r\n// const observable = timer(0, 1000)\r\n// const subscription = observable.subscribe(\r\n//   console.log\r\n// )\r\n\r\n\r\n// Interval will run for ever with interval of 1000\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { interval } from \"rxjs\";\r\n// const observable = interval(1000)\r\n// const subscription = observable.subscribe(\r\n//   console.log\r\n// )\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------//\r\n\r\n// import { Observable } from \"rxjs\";\r\n// const observable = new Observable((subscriber) => {\r\n//   const id = setInterval(() => {\r\n//     subscriber.next('test')\r\n//     console.log('leak')\r\n//   }, 1000)\r\n//   // subscriber.complete()            // Without this observble will run for ever \r\n//   return () => {\r\n//     clearInterval(id)\r\n//   }\r\n//   // subscriber.next('Hello world')                   // Runs II //\r\n//   // subscriber.error('Error!')            // After Error rest of the code do not run \r\n//   // subscriber.next('test')\r\n//   // subscriber.complete()                 // After Complete rest of the code do not run       \r\n//   // subscriber.next('next')\r\n// })\r\n\r\n// // console.log('before')                              // Runs I //\r\n\r\n// const subscription = observable.subscribe({\r\n//   next: (value) => {\r\n//     console.log(`Received ${value}`)\r\n//   },\r\n//   complete: () => {\r\n//     console.log(\"Completed\")\r\n//   },\r\n//   error: (err) => {\r\n//     console.log(err)\r\n//   }\r\n// })\r\n\r\n// setTimeout(() => {\r\n//   subscription.unsubscribe()\r\n// }, 4000)\r\n\r\n// // console.log('after')                               // Runs III //"},"lineCount":null}},"error":null,"hash":"7f731ed9eeb91a6164814216eeda1458","cacheData":{"env":{}}}